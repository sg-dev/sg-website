@article{Geipel2012,
    author = "Geipel, Markus Michael and Schweitzer, Frank",
    publisher = "IEEE Computer Society",
    doi = "10.1109/TSE.2011.91",
    title = "The Link between Dependency and Cochange: Empirical Evidence",
    journal = "IEEE Transactions on Software Engineering",
    abstract = "We investigate the relationship between class dependency and change propagation (cochange) in software written in Java. On the one hand, we find a strong correlation between dependency and cochange. Furthermore, we provide empirical evidence for the propagation of change along paths of dependency. These findings support the often alleged role of dependencies as propagators of change. On the other hand, we find that approximately half of all dependencies are never involved in cochanges and that the vast majority of cochanges pertain to only a small percentage of dependencies. This means that inferring the cochange characteristics of a software architecture solely from its dependency structure results in a severely distorted approximation of cochange characteristics. Any metric which uses dependencies alone to pass judgment on the evolvability of a piece of Java software is thus unreliable. As a consequence, we suggest to always take both the change characteristics and the dependency structure into account when evaluating software architecture.",
    address = "Los Alamitos, CA, USA",
    number = "6",
    volume = "38",
    url = "http://www.computer.org/csdl/trans/ts/2012/06/tts2012061432-abs.html",
    year = "2012",
    pages = "1432-1444",
    issn = "0098-5589"
}
